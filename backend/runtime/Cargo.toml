[package]
name        = "sage-playground-runtime"
description = "A solochain runtime with with two SAGE instances. Ready for use."
publish     = false

authors.workspace    = true
edition.workspace    = true
homepage.workspace   = true
repository.workspace = true
version.workspace    = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
substrate-wasm-builder = { workspace = true, optional = true }

[dependencies]
# Parity codec
parity-scale-codec = { workspace = true }
scale-info         = { workspace = true, features = [ "derive" ] }
# Substrate
frame-benchmarking                         = { workspace = true, optional = true }
frame-system-benchmarking                  = { workspace = true, optional = true }
frame-support                              = { workspace = true }
frame-system                               = { workspace = true }
frame-system-rpc-runtime-api               = { workspace = true }
frame-try-runtime                          = { workspace = true, optional = true }
frame-executive                            = { workspace = true }
frame-metadata-hash-extension              = { workspace = true }
# Substrate - Pallets
pallet-aura                                = { workspace = true }
pallet-assets                              = { workspace = true }
pallet-balances                            = { workspace = true }
pallet-grandpa                             = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }
pallet-sudo                                = { workspace = true }
pallet-timestamp                           = { workspace = true }
pallet-transaction-payment                 = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
# Substrate - Primitives
sp-api                                     = { workspace = true }
sp-block-builder                           = { workspace = true }
sp-consensus-aura                          = { workspace = true }
sp-consensus-grandpa                       = { workspace = true }
sp-core                                    = { workspace = true }
sp-genesis-builder                         = { workspace = true }
sp-inherents                               = { workspace = true }
sp-offchain                                = { workspace = true }
sp-runtime                                 = { workspace = true }
sp-session                                 = { workspace = true }
sp-std                                     = { workspace = true }
sp-storage                                 = { workspace = true }
sp-transaction-pool                        = { workspace = true }
sp-version                                 = { workspace = true }
# Ajuna Primitives
ajuna-payment-handler = { workspace = true }
ajuna-primitives      = { workspace = true }
# Ajuna Pallets
pallet-ajuna-affiliates = { workspace = true }
pallet-ajuna-seasons    = { workspace = true }
pallet-ajuna-tournament = { workspace = true }
# SAGE
pallet-sage        = { workspace = true }
sage-api           = { workspace = true }
# Games
game-battle-mogs = { workspace = true }
game-casino-jam  = { workspace = true }

[features]
default = ["std"]
std = [
	"parity-scale-codec/std",
	"scale-info/std",
	"frame-executive/std",
	"frame-metadata-hash-extension/std",
	"frame-support/std",
	"frame-system-benchmarking?/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-benchmarking?/std",
	"frame-try-runtime?/std",
	"pallet-aura/std",
	"pallet-assets/std",
	"pallet-balances/std",
	"pallet-grandpa/std",
	"pallet-insecure-randomness-collective-flip/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-consensus-grandpa/std",
	"sp-core/std",
	"sp-genesis-builder/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-storage/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"substrate-wasm-builder",
	"ajuna-payment-handler/std",
	"ajuna-primitives/std",
	"pallet-ajuna-affiliates/std",
	"pallet-ajuna-seasons/std",
	"pallet-ajuna-tournament/std",
	"pallet-sage/std",
	"sage-api/std",
]

runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-sudo/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"ajuna-payment-handler/runtime-benchmarks",
	"ajuna-primitives/runtime-benchmarks",
	"pallet-ajuna-affiliates/runtime-benchmarks",
	"pallet-ajuna-seasons/runtime-benchmarks",
	"pallet-ajuna-tournament/runtime-benchmarks",
	"pallet-sage/runtime-benchmarks",
	"game-battle-mogs/runtime-benchmarks",
]

try-runtime = [
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-ajuna-affiliates/try-runtime",
	"pallet-ajuna-seasons/try-runtime",
	"pallet-ajuna-tournament/try-runtime",
	"sp-runtime/try-runtime",
	"pallet-sage/try-runtime",
]

# Enable the metadata hash generation.
#
# This is hidden behind a feature because it increases the compile time.
# The wasm binary needs to be compiled twice, once to fetch the metadata,
# generate the metadata hash and then a second time with the
# `RUNTIME_METADATA_HASH` environment variable set for the `CheckMetadataHash`
# extension.
metadata-hash = ["substrate-wasm-builder/metadata-hash"]

# A convenience feature for enabling things when doing a build
# for an on-chain release.
on-chain-release-build = ["metadata-hash", "sp-api/disable-logging"]
